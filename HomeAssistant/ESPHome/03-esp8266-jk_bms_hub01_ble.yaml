substitutions:
  name: jk-bms
  esp_name: 03-esp82-jk-bms-hub-01
  bms0: "${name} bms0"
  bms1: "${name} bms1"
  bms2: "${name} bms2"
  device_description: "Monitor and control a JK-BMS via bluetooth"
  external_components_source: github://syssi/esphome-jk-bms@main
  bms0_mac_address: C8:47:80:01:CE:38
  # bms1_mac_address: C8:47:8C:E1:E2:E2
  # bms2_mac_address: C8:47:8C:E1:E2:E3
  # Please use "JK02_24S" if you own a old JK-BMS < hardware version 11.0 (hardware version >= 6.0 and < 11.0)
  # Please use "JK02_32S" if you own a new JK-BMS >= hardware version 11.0 (f.e. JK-B2A8S20P hw 11.XW, sw 11.26)
  # Please use "JK04" if you have some old JK-BMS <= hardware version 3.0 (f.e. JK-B2A16S hw 3.0, sw. 3.3.0)
  bms0_protocol_version: JK02_32S
  # bms1_protocol_version: JK02_32S
  # bms2_protocol_version: JK02_32S

esphome:
  name: ${esp_name}
  comment: ${device_description}
  project:
    name: "syssi.esphome-jk-bms"
    version: 2.0.0

esp8266:
  board: esp01_1m

external_components:
  - source: ${external_components_source}
    refresh: 0s

# Multiple networks with DHCP
wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: RoLu_dhcp_EXT
    password: !secret dhcp_ext
  - ssid: RoLu_dhcp
    password: !secret rolu_dhcp

  # Optional manual IP
  manual_ip:
    static_ip: ${esp_ip}
    gateway: 192.168.1.1
    subnet: 255.255.255.0   
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails  
  ap:
    ssid: "03-esp82-jk-bms-hub-01"
    password: "03-esp82-jk-bms-hub-01"  

ota:
  on_begin:
    then:
      - switch.turn_off: ble_client_switch0
      - switch.turn_off: ble_client_switch1
      - logger.log: "BLE connection suspended for OTA update"

logger:
  level: DEBUG

# If you don't use Home Assistant please remove this `api` section and uncomment the `mqtt` component!
api:

# mqtt:
#   broker: !secret mqtt_host
#   username: !secret mqtt_username
#   password: !secret mqtt_password
#   id: mqtt_client

esp32_ble_tracker:
  on_ble_advertise:
    then:
      - lambda: |-
          if (x.get_name().rfind("JK-", 0) == 0 || x.get_name().rfind("JK_", 0) == 0) {
            ESP_LOGI("ble_adv", "New JK-BMS found");
            ESP_LOGI("ble_adv", "  Name: %s", x.get_name().c_str());
            ESP_LOGI("ble_adv", "  MAC address: %s", x.address_str().c_str());
            ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
            for (auto uuid : x.get_service_uuids()) {
              ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
            }
          }

ble_client:
  - mac_address: ${bms0_mac_address}
    id: client0
  # - mac_address: ${bms1_mac_address}
  #   id: client1
  # - mac_address: ${bms2_mac_address}
  #   id: client2

jk_bms_ble:
  - ble_client_id: client0
    protocol_version: ${bms0_protocol_version}
    throttle: 5s
    id: bms0
  # - ble_client_id: client1
  #   protocol_version: ${bms1_protocol_version}
  #   throttle: 5s
  #   id: bms1
  # - ble_client_id: client2
  #   protocol_version: ${bms2_protocol_version}
  #   throttle: 5s
  #   id: bms2

binary_sensor:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    balancing:
      name: "${bms0} balancing"
    charging:
      name: "${bms0} charging"
    discharging:
      name: "${bms0} discharging"
    online_status:
      name: "${bms0} online status"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   balancing:
  #     name: "${bms1} balancing"
  #   charging:
  #     name: "${bms1} charging"
  #   discharging:
  #     name: "${bms1} discharging"
  #   online_status:
  #     name: "${bms1} online status"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   balancing:
  #     name: "${bms2} balancing"
  #   charging:
  #     name: "${bms2} charging"
  #   discharging:
  #     name: "${bms2} discharging"
  #   online_status:
  #     name: "${bms2} online status"

button:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    retrieve_settings:
      name: "${bms0} retrieve settings"
    retrieve_device_info:
      name: "${bms0} retrieve device info"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   retrieve_settings:
  #     name: "${bms1} retrieve settings"
  #   retrieve_device_info:
  #     name: "${bms1} retrieve device info"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   retrieve_settings:
  #     name: "${bms2} retrieve settings"
  #   retrieve_device_info:
  #     name: "${bms2} retrieve device info"

number:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    balance_trigger_voltage:
      name: "${bms0} balance trigger voltage"
    balance_starting_voltage:
      name: "${bms0} balance starting voltage"
    power_off_voltage:
      name: "${bms0} power off voltage"
    # ...

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   balance_trigger_voltage:
  #     name: "${bms1} balance trigger voltage"
  #   balance_starting_voltage:
  #     name: "${bms1} balance starting voltage"
  #   power_off_voltage:
  #     name: "${bms1} power off voltage"
  #   # ...

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   balance_trigger_voltage:
  #     name: "${bms2} balance trigger voltage"
  #   balance_starting_voltage:
  #     name: "${bms2} balance starting voltage"
  #   power_off_voltage:
  #     name: "${bms2} power off voltage"
  #   # ...

sensor:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    delta_cell_voltage:
      name: "${bms0} delta cell voltage"
    average_cell_voltage:
      name: "${bms0} average cell voltage"
    total_voltage:
      name: "${bms0} total voltage"
    current:
      name: "${bms0} current"
    power:
      name: "${bms0} power"
    power_tube_temperature:
      name: "${bms0} power tube temperature"
    # ...

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   delta_cell_voltage:
  #     name: "${bms1} delta cell voltage"
  #   average_cell_voltage:
  #     name: "${bms1} average cell voltage"
  #   total_voltage:
  #     name: "${bms1} total voltage"
  #   current:
  #     name: "${bms1} current"
  #   power:
  #     name: "${bms1} power"
  #   power_tube_temperature:
  #     name: "${bms1} power tube temperature"
  #   # ...

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   delta_cell_voltage:
  #     name: "${bms2} delta cell voltage"
  #   average_cell_voltage:
  #     name: "${bms2} average cell voltage"
  #   total_voltage:
  #     name: "${bms2} total voltage"
  #   current:
  #     name: "${bms2} current"
  #   power:
  #     name: "${bms2} power"
  #   power_tube_temperature:
  #     name: "${bms2} power tube temperature"
  #   # ...

switch:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    charging:
      name: "${bms0} charging"
    discharging:
      name: "${bms0} discharging"
    balancer:
      name: "${bms0} balancer"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   charging:
  #     name: "${bms1} charging"
  #   discharging:
  #     name: "${bms1} discharging"
  #   balancer:
  #     name: "${bms1} balancer"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   charging:
  #     name: "${bms2} charging"
  #   discharging:
  #     name: "${bms2} discharging"
  #   balancer:
  #     name: "${bms2} balancer"

  - platform: ble_client
    ble_client_id: client0
    id: ble_client_switch0
    name: "${bms0} enable bluetooth connection"
  # - platform: ble_client
  #   ble_client_id: client1
  #   id: ble_client_switch1
  #   name: "${bms1} enable bluetooth connection"
  # - platform: ble_client
  #   ble_client_id: client2
  #   id: ble_client_switch2
  #   name: "${bms2} enable bluetooth connection"

text_sensor:
  - platform: jk_bms_ble
    jk_bms_ble_id: bms0
    errors:
      name: "${bms0} errors"
    total_runtime_formatted:
      name: "${bms0} total runtime formatted"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms1
  #   errors:
  #     name: "${bms1} errors"
  #   total_runtime_formatted:
  #     name: "${bms1} total runtime formatted"

  # - platform: jk_bms_ble
  #   jk_bms_ble_id: bms2
  #   errors:
  #     name: "${bms2} errors"
  #   total_runtime_formatted:
  #     name: "${bms2} total runtime formatted"
