###################################################################################
###################################################################################
# 06 - Bought on Amazon the 2024-07-26
###################################################################################

substitutions:
  name: "06-esp32-jk-bms-hub-rs485-01"
  friendly_name: 06-ESP32-JK-BMS-hub-RS485-01-WithMaster
  esp_ip: 192.168.1.241     
  device_description: "Monitor and control the JK-BMS Inverter PB_xxx via RS485 internal"
  # external_components_source: github://txubelaxu/esphome-jk-bms@main  
  external_components_source: github://txubelaxu/esphome-jk-bms@2.0
  # #JK_PB2A16S20P-00
  name_jk_shelf_01: "01_jkibms-top-right"
  name_jk_shelf_02: "02_jkibms-bottom-right"
  name_jk_shelf_03: "03_jkibms-top-left"
  name_jk_shelf_04: "04_jkibms-bottom-left"
  tx_pin_uart_0: GPIO22 #GPIO16
  rx_pin_uart_0: GPIO23 #GPIO17
  talk_pin_rs485: GPIO21 #GPIO4
  
  # Please use "JK02_24S" if you own a old JK-BMS < hardware version 11.0 (hardware version >= 6.0 and < 11.0)
  # Please use "JK02_32S" if you own a new JK-BMS >= hardware version 11.0 (f.e. JK-B2A8S20P hw 11.XW, sw 11.26)
  # Please use "JK04" if you have some old JK-BMS <= hardware version 3.0 (f.e. JK-B2A16S hw 3.0, sw. 3.3.0)
  protocol_version: JK02_32S # For the non inverters JK
  # protocol_version: JK02_24S # For JK-Inverters(JK_PBxxx)
  

esphome:
  name: ${name}
  friendly_name: ${friendly_name}  
  comment: ${device_description}
  min_version: 2024.6.0
  name_add_mac_suffix: false  
  project:
    name: "txubelaxu.esphome-jk-bms"
    version: 1.3.1

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable Home Assistant API
# If you don't use Home Assistant please remove this `api` section and uncomment the `mqtt` component!
api:  

# To have a "next url" for improv serial
web_server:
  port: 80

# Allow Over-The-Air updates
ota:
  platform: esphome

# Multiple networks with DHCP. The secrets file is inside the ESPHome section, not in the main secret.yaml file of home assistant
wifi:
  networks:
  - ssid: !secret wifi_ssid_main
    password: !secret wifi_main_password
  - ssid: !secret wifi_ssid_secondary
    password: !secret wifi_secondary_password
  - ssid: !secret wifi_ssid_dhcp
    password: !secret wifi_ssid_dhcp_password
  - ssid: !secret wifi_ssid_dhcp_ext
    password: !secret wifi_ssid_dhcp_ext_password

  # Optional manual IP
  manual_ip:
    static_ip: ${esp_ip}
    gateway: 192.168.1.1
    subnet: 255.255.255.0   

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "06-esp32-jk-bms-hub-bt-01_ap"
    password: "06-esp32-jk-bms-hub-bt-01_ap"

logger:
  tx_buffer_size: 1024
  level: DEBUG
  # level: VERY_VERBOSE
  # logs:
  #   esp32_ble_tracker: VERY_VERBOSE
  #   jk_bms_ble: VERY_VERBOSE
  #   scheduler: DEBUG
  #   component: DEBUG
  #   sensor: DEBUG
  #   mqtt: INFO
  #   mqtt.idf: INFO
  #   mqtt.component: INFO
  #   mqtt.sensor: INFO
  #   mqtt.switch: INFO
  #   api.service: INFO
  #   api: INFO      

debug:
  update_interval: 5s   

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
# captive_portal:

# Allow provisioning Wi-Fi via serial
improv_serial:

# dashboard_import:
#   package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
#   import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
# esp32_improv:
#   authorizer: none

external_components:
  - source: ${external_components_source}
    refresh: 0s
    components: [ jk_rs485_sniffer , jk_rs485_bms ]    

# mqtt:
#   broker: !secret mqtt_host
#   username: !secret mqtt_username
#   password: !secret mqtt_password
#   id: mqtt_client

uart:
  - id: uart_0
    baud_rate: 115200
    rx_buffer_size: 500
    tx_pin: ${tx_pin_uart_0}
    rx_pin: ${rx_pin_uart_0}

jk_rs485_sniffer:
  - id: sniffer0
    protocol_version: ${protocol_version}
    rx_timeout: 500ms
    uart_id: uart_0
    talk_pin: ${talk_pin_rs485}

jk_rs485_bms:
  - id: bms0
    rs485_address: 0x00
    jk_rs485_sniffer_id: sniffer0
    # update_interval: 180s
    update_interval: 60s
  # - id: bms1
  #   rs485_address: 0x02
  #   jk_rs485_sniffer_id: sniffer0
  #   update_interval: 180s   

# ###################################################
# BINARY SENSORS
# ###################################################
binary_sensor:
  - platform: jk_rs485_bms
    jk_rs485_bms_id: bms0
    status_balancing:
      name: "${name_jk_shelf_01} status balancing"
    status_precharging:
      name: "${name_jk_shelf_01} status precharging"      
    status_charging:
      name: "${name_jk_shelf_01} status charging"
    status_discharging:
      name: "${name_jk_shelf_01} status discharging"
    status_online:
      name: "${name_jk_shelf_01} status online"
    status_heating:
      name: "${name_jk_shelf_01} status heating"      
    alarm_wireres:
      name: "${name_jk_shelf_01} alarm WireRes"
    alarm_mosotp:
      name: "${name_jk_shelf_01} alarm MosOTP"
    alarm_cellquantity:
      name: "${name_jk_shelf_01} alarm CellQuantity"
    alarm_cursensorerr:
      name: "${name_jk_shelf_01} alarm CurSensorErr"
    alarm_cellovp:
      name: "${name_jk_shelf_01} alarm CellOVP"
    alarm_batovp:
      name: "${name_jk_shelf_01} alarm BatOVP"
    alarm_chocp:
      name: "${name_jk_shelf_01} alarm ChOCP"
    alarm_chscp:
      name: "${name_jk_shelf_01} alarm ChSCP"
    alarm_chotp:
      name: "${name_jk_shelf_01} alarm ChOTP"
    alarm_chutp:
      name: "${name_jk_shelf_01} alarm ChUTP"
    alarm_cpuauxcommuerr:
      name: "${name_jk_shelf_01} alarm CPUAuxCommuErr"
    alarm_celluvp:
      name: "${name_jk_shelf_01} alarm CellUVP"
    alarm_batuvp:
      name: "${name_jk_shelf_01} alarm BatUVP"
    alarm_dchocp:
      name: "${name_jk_shelf_01} alarm DchOCP"
    alarm_dchscp:
      name: "${name_jk_shelf_01} alarm DchSCP"
    alarm_dchotp:
      name: "${name_jk_shelf_01} alarm DchOTP"
    alarm_chargemos:
      name: "${name_jk_shelf_01} alarm ChargeMOS"
    alarm_dischargemos:
      name: "${name_jk_shelf_01} alarm DischargeMOS"
    alarm_gpsdisconneted:
      name: "${name_jk_shelf_01} alarm GPSDisconneted"
    alarm_modifypwdintime:
      name: "${name_jk_shelf_01} alarm ModifyPWDinTime"
    alarm_dischargeonfailed:
      name: "${name_jk_shelf_01} alarm DischargeOnFailed"
    alarm_batteryovertemp:
      name: "${name_jk_shelf_01} alarm BatteryOverTemp"
    alarm_temperaturesensoranomaly:
      name: "${name_jk_shelf_01} alarm TemperatureSensorAnomaly"
    alarm_plcmoduleanomaly:
      name: "${name_jk_shelf_01} alarm PLCModuleAnomaly"
    alarm_mostempsensorabsent:
      name: "${name_jk_shelf_01} alarm MOSTempSensorAbsent"
    alarm_battempsensor1absent:
      name: "${name_jk_shelf_01} alarm BATTempSensor1Absent"
    alarm_battempsensor2absent:
      name: "${name_jk_shelf_01} alarm BATTempSensor2Absent"
    alarm_battempsensor3absent:
      name: "${name_jk_shelf_01} alarm BATTempSensor3Absent"
    alarm_battempsensor4absent:
      name: "${name_jk_shelf_01} alarm BATTempSensor4Absent"
    alarm_battempsensor5absent:
      name: "${name_jk_shelf_01} alarm BATTempSensor5Absent"

# ###################################################
# BUTTONS
# ###################################################
# button:
#   - platform: jk_bms_ble
#     retrieve_settings:
#       name: "${name_jk_shelf_01} retrieve settings"
#     retrieve_device_info:
#       name: "${name_jk_shelf_01} retrieve device info"

###################################################
# NUMBERS
###################################################
number:
  - platform: jk_rs485_bms
    jk_rs485_bms_id: bms0
    cell_smart_sleep_voltage:
      name: "${name_jk_shelf_01} cell smart sleep volt" 
    cell_undervoltage_protection:
      name: "${name_jk_shelf_01} cell undervolt protection"
    cell_undervoltage_protection_recovery:
      name: "${name_jk_shelf_01} cell undervolt protection recovery"
    cell_overvoltage_protection:
      name: "${name_jk_shelf_01} cell overvolt protection"
    cell_overvoltage_protection_recovery:    
      name: "${name_jk_shelf_01} cell overvolt protection recovery"
    cell_balancing_trigger_voltage:
      name: "${name_jk_shelf_01} balancing trigger volt"      
    cell_soc100_voltage:
      name: "${name_jk_shelf_01} cell soc100 volt"            
    cell_soc0_voltage:
      name: "${name_jk_shelf_01} cell soc0 volt"      
    cell_request_charge_voltage:
      name: "${name_jk_shelf_01} cell request charge volt"      
    cell_request_float_voltage:
      name: "${name_jk_shelf_01} cell request float volt"      
    cell_power_off_voltage:
      name: "${name_jk_shelf_01} cell power off volt"      
    cell_balancing_starting_voltage:
      name: "${name_jk_shelf_01} cell balancing starting volt"             
    max_charging_current:
      name: "${name_jk_shelf_01} max charging current"        
    charging_overcurrent_protection_delay:
      name: "${name_jk_shelf_01} charging overcurrent protection delay"
    charging_overcurrent_protection_recovery_delay:
      name: "${name_jk_shelf_01} charging overcurrent protection recovery delay"          
    max_discharging_current:
      name: "${name_jk_shelf_01} max discharging current" 
    discharging_overcurrent_protection_delay:
      name: "${name_jk_shelf_01} discharging overcurrent protection delay"
    discharging_overcurrent_protection_recovery_delay:            
      name: "${name_jk_shelf_01} discharging overcurrent protection recovery delay"    
    short_circuit_protection_delay:
      name: "${name_jk_shelf_01} short circuit protection delay"                    
    short_circuit_protection_recovery_delay:
      name: "${name_jk_shelf_01} short circuit protection recovery delay"         
    max_balancing_current:
      name: "${name_jk_shelf_01} max balancing current"       
    charging_overtemperature_protection:
      name: "${name_jk_shelf_01} charging overtemp protection"
    charging_overtemperature_protection_recovery:
      name: "${name_jk_shelf_01} charging overtemp protection recovery"
    discharging_overtemperature_protection:
      name: "${name_jk_shelf_01} discharging overtemp protection"
    discharging_overtemperature_protection_recovery:
      name: "${name_jk_shelf_01} discharging overtemp protection recovery" 
    charging_lowtemperature_protection:
      name: "${name_jk_shelf_01} charging lowtemp protection"
    charging_lowtemperature_protection_recovery:
      name: "${name_jk_shelf_01} charging lowtemp protection recovery"
    mos_overtemperature_protection:
      name: "${name_jk_shelf_01} mos overtemp protection"
    mos_overtemperature_protection_recovery:
      name: "${name_jk_shelf_01} mos overtemp protection recovery"
    cell_count_settings:
      name: "${name_jk_shelf_01} cell count settings"
    battery_capacity_total_settings:
      name: "${name_jk_shelf_01} bat capacity total settings"                
    precharging_time_from_discharge:
      name: "${name_jk_shelf_01} precharging time from discharge"        
    cell_request_charge_voltage_time:
      name: "${name_jk_shelf_01} cell request charge volt time"    
    cell_request_float_voltage_time:
      name: "${name_jk_shelf_01} cell request float volt time"        


# ###################################################
# SENSOR
# ###################################################
sensor:
  - platform: uptime
    id: uptime_sec  
  - platform: uptime    
    # name: "${name} Uptime Sensor"
    name: "Uptime Sensor"
    id: uptime_sensor
    update_interval: 5s
    entity_category: diagnostic
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              char buf[10];
              int uptime_sec = round(id(uptime_sensor).raw_state);
              int days = (int)(uptime_sec / 86400);
              int hours = (int)((uptime_sec % 86400) / 3600);
              int minutes = (int)((uptime_sec % 3600) / 60);
              int seconds = (int)(uptime_sec % 60);

              return(
                (
                  (days ? sprintf(buf, "%02dd ", days), std::string(buf) : "") +
                  (hours ? sprintf(buf, "%02dh ", hours), std::string(buf) : "") +
                  (minutes ? sprintf(buf, "%02dm ", minutes), std::string(buf) : "") +
                  (sprintf(buf, "%02ds", seconds), std::string(buf))
                ).c_str()
              );       
  - platform: wifi_signal
    name: "${name} WiFi Signal"
    update_interval: 60s
  - platform: debug
    free:
      name: "Heap Free"
# # ###################################################
  - platform: jk_rs485_bms
    jk_rs485_bms_id: bms0
    balancing_direction:
      name: "${name_jk_shelf_01} balancing direction"
    cell_voltage_min:
      name: "${name_jk_shelf_01} cell volt min"
    cell_voltage_max:
      name: "${name_jk_shelf_01} cell volt max"
    cell_voltage_min_cell_number:
      name: "${name_jk_shelf_01} cell volt min cell number"
    cell_voltage_max_cell_number:
      name: "${name_jk_shelf_01} cell volt max cell number"
    cell_delta_voltage:
      name: "${name_jk_shelf_01} cell delta volt"
    cell_average_voltage:
      name: "${name_jk_shelf_01} cell average volt"
    cell_resistance_min:
      name: "${name_jk_shelf_01} cell resist min"
    cell_resistance_max:
      name: "${name_jk_shelf_01} cell resist max"      
    cell_resistance_min_cell_number:
      name: "${name_jk_shelf_01} cell resist min cell number"
    cell_resistance_max_cell_number:
      name: "${name_jk_shelf_01} cell resist max cell number"      
    cell_voltage_01:
      name: "${name_jk_shelf_01} cell volt 01"
    cell_voltage_02:
      name: "${name_jk_shelf_01} cell volt 02"
    cell_voltage_03:
      name: "${name_jk_shelf_01} cell volt 03"
    cell_voltage_04:
      name: "${name_jk_shelf_01} cell volt 04"
    cell_voltage_05:
      name: "${name_jk_shelf_01} cell volt 05"
    cell_voltage_06:
      name: "${name_jk_shelf_01} cell volt 06"
    cell_voltage_07:
      name: "${name_jk_shelf_01} cell volt 07"
    cell_voltage_08:
      name: "${name_jk_shelf_01} cell volt 08"
    cell_voltage_09:
      name: "${name_jk_shelf_01} cell volt 09"
    cell_voltage_10:
      name: "${name_jk_shelf_01} cell volt 10"
    cell_voltage_11:
      name: "${name_jk_shelf_01} cell volt 11"
    cell_voltage_12:
      name: "${name_jk_shelf_01} cell volt 12"
    cell_voltage_13:
      name: "${name_jk_shelf_01} cell volt 13"
    cell_voltage_14:
      name: "${name_jk_shelf_01} cell volt 14"
    cell_voltage_15:
      name: "${name_jk_shelf_01} cell volt 15"
    cell_voltage_16:
      name: "${name_jk_shelf_01} cell volt 16"
    # cell_voltage_17:
    #   name: "${name_jk_shelf_01} cell volt 17"
    # cell_voltage_18:
    #   name: "${name_jk_shelf_01} cell volt 18"
    # cell_voltage_19:
    #   name: "${name_jk_shelf_01} cell volt 19"
    # cell_voltage_20:
    #   name: "${name_jk_shelf_01} cell volt 20"
    # cell_voltage_21:
    #   name: "${name_jk_shelf_01} cell volt 21"
    # cell_voltage_22:
    #   name: "${name_jk_shelf_01} cell volt 22"
    # cell_voltage_23:
    #   name: "${name_jk_shelf_01} cell volt 23"
    # cell_voltage_24:
    #   name: "${name_jk_shelf_01} cell volt 24"
    cell_resistance_01:
      name: "${name_jk_shelf_01} cell resist 01"
    cell_resistance_02:
      name: "${name_jk_shelf_01} cell resist 02"
    cell_resistance_03:
      name: "${name_jk_shelf_01} cell resist 03"
    cell_resistance_04:
      name: "${name_jk_shelf_01} cell resist 04"
    cell_resistance_05:
      name: "${name_jk_shelf_01} cell resist 05"
    cell_resistance_06:
      name: "${name_jk_shelf_01} cell resist 06"
    cell_resistance_07:
      name: "${name_jk_shelf_01} cell resist 07"
    cell_resistance_08:
      name: "${name_jk_shelf_01} cell resist 08"
    cell_resistance_09:
      name: "${name_jk_shelf_01} cell resist 09"
    cell_resistance_10:
      name: "${name_jk_shelf_01} cell resist 10"
    cell_resistance_11:
      name: "${name_jk_shelf_01} cell resist 11"
    cell_resistance_12:
      name: "${name_jk_shelf_01} cell resist 12"
    cell_resistance_13:
      name: "${name_jk_shelf_01} cell resist 13"
    cell_resistance_14:
      name: "${name_jk_shelf_01} cell resist 14"
    cell_resistance_15:
      name: "${name_jk_shelf_01} cell resist 15"
    cell_resistance_16:
      name: "${name_jk_shelf_01} cell resist 16"
    # cell_resistance_17:
    #   name: "${name_jk_shelf_01} cell resist 17"
    # cell_resistance_18:
    #   name: "${name_jk_shelf_01} cell resist 18"
    # cell_resistance_19:
    #   name: "${name_jk_shelf_01} cell resist 19"
    # cell_resistance_20:
    #   name: "${name_jk_shelf_01} cell resist 20"
    # cell_resistance_21:
    #   name: "${name_jk_shelf_01} cell resist 21"
    # cell_resistance_22:
    #   name: "${name_jk_shelf_01} cell resist 22"
    # cell_resistance_23:
    #   name: "${name_jk_shelf_01} cell resist 23"
    # cell_resistance_24:
    #   name: "${name_jk_shelf_01} cell resist 24"
    battery_voltage:
      name: "${name_jk_shelf_01} bat volt"
    battery_current:
      name: "${name_jk_shelf_01} bat current"
    battery_power:
      name: "${name_jk_shelf_01} bat power"
    battery_power_charging:
      name: "${name_jk_shelf_01} bat power charging"
    battery_power_discharging:
      name: "${name_jk_shelf_01} bat power discharging"
    temperature_sensor_1:
      name: "${name_jk_shelf_01} temp sensor 1"
    temperature_sensor_2:
      name: "${name_jk_shelf_01} temp sensor 2"
    temperature_sensor_3:
      name: "${name_jk_shelf_01} temp sensor 3"
    temperature_sensor_4:
      name: "${name_jk_shelf_01} temp sensor 4"
    temperature_sensor_5:
      name: "${name_jk_shelf_01} temp sensor 5"
    temperature_powertube:
      name: "${name_jk_shelf_01} temp powertube"
    battery_capacity_state_of_charge:
      name: "${name_jk_shelf_01} bat capacity state of charge"
    battery_capacity_remaining:
      name: "${name_jk_shelf_01} bat capacity remaining"
    charging_cycles:
      name: "${name_jk_shelf_01} charging cycles"
    battery_capacity_total_charging_cycle:
      name: "${name_jk_shelf_01} bat capacity total charging cycle"
    battery_total_runtime:
      name: "${name_jk_shelf_01} bat total runtime"
    balancing_current:
      name: "${name_jk_shelf_01} balancing current"
    errors_bitmask:
      name: "${name_jk_shelf_01} errors bitmask"
    cell_count_real:
      name: "${name_jk_shelf_01} cell count real"
    smart_sleep_time:
      name: "${name_jk_shelf_01} smart sleep time"
    powertube_temperature_protection:
      name: "${name_jk_shelf_01} powertube temp protection" 
    powertube_temperature_protection_recovery:
      name: "${name_jk_shelf_01} powertube temp protection recovery"  
    battery_total_alarms_count:     
      name: "${name_jk_shelf_01} bat total alarms count"  
    battery_total_alarms_active:     
      name: "${name_jk_shelf_01} bat total alarms active"  
    emergency_time_countdown:
      name: "${name_jk_shelf_01} emergency time countdown"      
    uart1_protocol_number:
      name: "${name_jk_shelf_01} uart1 protocol number"
    uart2_protocol_number:
      name: "${name_jk_shelf_01} uart2 protocol number"      
    battery_soh_valuation:    
      name: "${name_jk_shelf_01} bat soh valuation"
    discharging_overcurrent_protection_release_time:    
      name: "${name_jk_shelf_01} discharging overcurrent protection release time"
    discharging_short_circuit_protection_release_time:    
      name: "${name_jk_shelf_01} discharging short circuit protection release time"
    charging_overcurrent_protection_release_time:    
      name: "${name_jk_shelf_01} charging overcurrent protection release time"
    charging_short_circuit_protection_release_time:    
      name: "${name_jk_shelf_01} charging short circuit protection release time"
    cell_undervoltage_protection_release_time:    
      name: "${name_jk_shelf_01} cell undervolt protection release time"
    cell_overvoltage_protection_release_time:    
      name: "${name_jk_shelf_01} cell overvolt protection release time"

# ###################################################
# SWITCH
# ###################################################
switch:
  - platform: template
    name: "Broadcast changes to all BMSs"
    id: broadcast_active
    icon: "mdi:cast"
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    turn_on_action:
      - lambda: |-
          id(sniffer0).set_broadcast_changes_to_all_bms(true);  
    turn_off_action:
      - lambda: |-
          id(sniffer0).set_broadcast_changes_to_all_bms(false); 
  # #######          
  - platform: jk_rs485_bms
    jk_rs485_bms_id: bms0
    precharging:
      name: "${name_jk_shelf_01} precharging"
    charging:
      name: "${name_jk_shelf_01} charging"
    discharging:
      name: "${name_jk_shelf_01} discharging"
    balancing:
      name: "${name_jk_shelf_01} balancing"
    emergency:
      name: "${name_jk_shelf_01} emergency"
    heating:
      name: "${name_jk_shelf_01} heating"
    display_always_on:
      name: "${name_jk_shelf_01} display_always_on"
    charging_float_mode:
      name: "${name_jk_shelf_01} charging float mode"
    timed_stored_data:
      name: "${name_jk_shelf_01} timed stored data"
    disable_temperature_sensors:
      name: "${name_jk_shelf_01} disable temp sensors"
    smart_sleep_on:
      name: "${name_jk_shelf_01} smart sleep on"
    disable_pcl_module:
      name: "${name_jk_shelf_01} disable pcl module"
    gps_heartbeat:
      name: "${name_jk_shelf_01} gps heartbeat"
    port_selection:
      name: "${name_jk_shelf_01} port selection"
    special_charger:
      name: "${name_jk_shelf_01} special charger" 
# ###################################################
  # - platform: ble_client
  #   ble_client_id: client0
  #   id: ble_client_switch0
  #   name: "${name} enable bluetooth connection"


# ###################################################
# TEXT
# ###################################################
text_sensor:
  # +--------------------------------------+
  # | Uptime Human Readable                |
  # +--------------------------------------+
  - platform: template
    # name: ${name} Uptime Human Readable
    name: Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
    entity_category: diagnostic  
  - platform: jk_rs485_bms
    jk_rs485_bms_id: bms0
    errors:
      name: "${name_jk_shelf_01} errors"
    operation_status:
      name: "${name_jk_shelf_01} operation status"
    battery_type:
      name: "${name_jk_shelf_01} bat type"
    total_runtime_formatted:
      name: "${name_jk_shelf_01} total runtime formatted"
    info_vendorid:
      name: "${name_jk_shelf_01} info vendorid"
    info_hardware_version:
      name: "${name_jk_shelf_01} info hardware version"
    info_software_version:
      name: "${name_jk_shelf_01} info software version"
    info_device_name:
      name: "${name_jk_shelf_01} info device name"
    info_device_password:
      name: "${name_jk_shelf_01} info device password"   
    network_nodes_available:
      name: "${name_jk_shelf_01} network nodes available"  
    info_device_serial_number:
      name: "${name_jk_shelf_01} info device serial number" 
    info_device_setup_passcode:
      name: "${name_jk_shelf_01} info device setup passcode"  

# ###################################################
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
    ssid:
      name: ESP Connected SSID
    bssid:
      name: ESP Connected BSSID
    mac_address:
      name: ESP Mac Wifi Address
    scan_results:
      name: ESP Latest Scan Results
    dns_address:
      name: ESP DNS Address   

